{"ast":null,"code":"var _jsxFileName = \"/Users/wyzer/Desktop/latihan/react/udemy-REACT-QUERY/base-blog-em/src/PostDetail.jsx\",\n  _s = $RefreshSig$();\nimport { useMutation, useQuery } from 'react-query';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function fetchComments(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`);\n  return response.json();\n}\nasync function deletePost(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/postId/${postId}`, {\n    method: 'DELETE'\n  });\n  return response.json();\n}\nasync function updatePost(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/postId/${postId}`, {\n    method: 'PATCH',\n    data: {\n      title: 'REACT QUERY FOREVER!!!!'\n    }\n  });\n  return response.json();\n}\nexport function PostDetail(_ref) {\n  _s();\n  let {\n    post\n  } = _ref;\n  const {\n    data,\n    isLoading,\n    isError,\n    error\n  } = useQuery(['comments', post.id], () => fetchComments(post.id));\n  const deleteMutation = useMutation(postId => deletePost(postId));\n  const updateMutation = useMutation(postId => updatePost(postId));\n\n  // clear messages when a new post is selected\n  // reference: https://www.udemy.com/course/learn-react-query/learn/#questions/17213546/\n  useEffect(() => {\n    updateMutation.reset();\n    deleteMutation.reset();\n    // can't include updateMutation and deleteMutation in the dependencies\n    // because the function updates them -- so there would be an infinite loop!\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [post.id]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: 'blue'\n      },\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteMutation.mutate(post.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateMutation.mutate(post.id),\n      children: \"Update title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), deleteMutation.isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Error deleting the post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), deleteMutation.isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'purple'\n      },\n      children: \"Deleting the post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), deleteMutation.isSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: \"Post has (not) been deleted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), updateMutation.isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Error updating the post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), updateMutation.isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'purple'\n      },\n      children: \"Updating the post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), updateMutation.isSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: \"Post has (not) been updated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), data.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [comment.email, \": \", comment.body]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(PostDetail, \"wuc8y1O185A5odXsEcABgdZiHOE=\", false, function () {\n  return [useQuery, useMutation, useMutation];\n});\n_c = PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["useMutation","useQuery","useEffect","fetchComments","postId","response","fetch","json","deletePost","method","updatePost","data","title","PostDetail","post","isLoading","isError","error","id","deleteMutation","updateMutation","reset","toString","color","mutate","isSuccess","body","map","comment","email"],"sources":["/Users/wyzer/Desktop/latihan/react/udemy-REACT-QUERY/base-blog-em/src/PostDetail.jsx"],"sourcesContent":["import { useMutation, useQuery } from 'react-query';\nimport { useEffect } from 'react';\n\nasync function fetchComments(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\n  );\n  return response.json();\n}\n\nasync function deletePost(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/postId/${postId}`,\n    { method: 'DELETE' }\n  );\n  return response.json();\n}\n\nasync function updatePost(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/postId/${postId}`,\n    { method: 'PATCH', data: { title: 'REACT QUERY FOREVER!!!!' } }\n  );\n  return response.json();\n}\n\nexport function PostDetail({ post }) {\n  const { data, isLoading, isError, error } = useQuery(\n    ['comments', post.id],\n    () => fetchComments(post.id)\n  );\n\n  const deleteMutation = useMutation((postId) => deletePost(postId));\n  const updateMutation = useMutation((postId) => updatePost(postId));\n\n  // clear messages when a new post is selected\n  // reference: https://www.udemy.com/course/learn-react-query/learn/#questions/17213546/\n  useEffect(() => {\n    updateMutation.reset();\n    deleteMutation.reset();\n    // can't include updateMutation and deleteMutation in the dependencies\n    // because the function updates them -- so there would be an infinite loop!\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [post.id]);\n\n  if (isLoading) {\n    return <h3>Loading!</h3>;\n  }\n\n  if (isError) {\n    return (\n      <>\n        <h3>Error</h3>\n        <p>{error.toString()}</p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h3 style={{ color: 'blue' }}>{post.title}</h3>\n      <button onClick={() => deleteMutation.mutate(post.id)}>Delete</button>\n      <button onClick={() => updateMutation.mutate(post.id)}>\n        Update title\n      </button>\n      {deleteMutation.isError && (\n        <p style={{ color: 'red' }}>Error deleting the post</p>\n      )}\n      {deleteMutation.isLoading && (\n        <p style={{ color: 'purple' }}>Deleting the post</p>\n      )}\n      {deleteMutation.isSuccess && (\n        <p style={{ color: 'green' }}>Post has (not) been deleted</p>\n      )}\n      {updateMutation.isError && (\n        <p style={{ color: 'red' }}>Error updating the post</p>\n      )}\n      {updateMutation.isLoading && (\n        <p style={{ color: 'purple' }}>Updating the post</p>\n      )}\n      {updateMutation.isSuccess && (\n        <p style={{ color: 'green' }}>Post has (not) been updated</p>\n      )}\n      <p>{post.body}</p>\n      <h4>Comments</h4>\n      {data.map((comment) => (\n        <li key={comment.id}>\n          {comment.email}: {comment.body}\n        </li>\n      ))}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}